import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.23'
}

group = 'com.felix'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// for RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	// for JPA, this is a ORM framework
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// core springboot for dispatching web service
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// for OpenAPI, when you start the application, go to http://localhost:8080/swagger-ui.html
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	// for aws services, here we just use S3, you can add more services, see: https://docs.awspring.io/spring-cloud-aws/docs/3.0.0/reference/html/index.html#starter-dependencies
	implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.1")
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'
	// serialization/deserialization of JSON for Kotlin
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	// for PostgreSQL database driver to connect to the database
	runtimeOnly 'org.postgresql:postgresql'
	// for testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
